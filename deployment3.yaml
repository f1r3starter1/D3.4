apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-sf
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx-sf
  template:
    metadata:
      labels:
        app: nginx-sf
    spec:
      containers:
      - name: nginx
        image: nginx:1.21.1-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: auth-basic-secret
          mountPath: /etc/nginx/.htpasswd
          subPath: .htpasswd
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
      - name: auth-basic-secret
        secret:
          secretName: auth-basic
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    http {
      server {
        listen       80;
        server_name  localhost;
        location / {
          root   /usr/share/nginx/html;
          index  index.html index.htm;
          auth_basic "Restricted Content";
          auth_basic_user_file /etc/nginx/.htpasswd;
        }
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: sf-webserver
spec:
  selector:
    app: nginx-sf
  type: NodePort
  ports:
  - name: http
    port: 80
    targetPort: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: auth-basic
type: Opaque
data:
  .htpasswd: YWRtaW46e1NIQX1RTDBBRldNSVg4TlJaVEtlb2Y5Y1hzdmJ2dTg9Cg== 


